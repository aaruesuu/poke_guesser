/* ==========================================================================
   1. 基本設定 (フォント, 変数, リセット)
   ========================================================================== */
   @import url('https://fonts.googleapis.com/css2?family=DotGothic16&display=swap');
   @import url('https://fonts.googleapis.com/css2?family=Zen+Maru+Gothic&display=swap');
   
   :root {
       --c-bg: #c41e3a;
       --c-main-bg: #d1e9dd;
       --c-text: #222;
       --c-border: #333;
       --c-accent: #f7d864;
       --c-header-bg: rgba(0,0,0,0.4);
       --c-white: #fff;
       --c-black: #000;
       --c-black-op10: rgba(0,0,0,0.1);
       --c-black-op20: rgba(0,0,0,0.2);
       --c-black-op50: rgba(0,0,0,0.5);
       --c-btn-classic: #53a2d0;
       --c-btn-score: #42b46c;
       --c-btn-stats: #d8cb41;
       --c-btn-guess: #c41e3a;
       --c-correct: #64b46c;
       --c-partial: #f7d864;
       --c-wrong: #646464;
       --c-arrow-up-red: #e63946;
       --c-arrow-down-blue: #457b9d;
   }
   
   * { margin: 0; padding: 0; box-sizing: border-box; }
   
   html {
       -webkit-text-size-adjust: 100%;
       height: 100%;
   }
   
   body {
       font-family: 'DotGothic16', sans-serif;
       background-color: var(--c-bg);
       color: var(--c-text);
       overflow-x: hidden;
       font-size: 16px;
       height: 100%;
   }
   
   /* ==========================================================================
      2. 全体レイアウト & ヘッダー
      ========================================================================== */
   #theme-container {
       display: flex;
       flex-direction: column;
       width: 95%;
       height: 90%;
       margin: 10px auto 0 auto;
       background-color: var(--c-main-bg); /* 白いエリアの背景色をコンテナに移動 */
       border: 5px solid var(--c-border);
       border-radius: 10px;
       box-shadow: inset 4px 4px 0px var(--c-black-op20);
   }
   
   #main-content {
       padding: 1rem;
       flex-grow: 1;
       display: flex;
       flex-direction: column;
       overflow-y: auto; /* main-content内でスクロールさせる */
   }
   
   
   #mode-selection-screen {
       display: flex;
       flex-direction: column;
       justify-content: center;
       flex-grow: 1;
   }
   
   #app-header {
       background: var(--c-header-bg);
       border-bottom: 2px solid var(--c-border);
       padding: 0.5rem 1rem;
       display: flex;
       justify-content: space-between;
       align-items: center;
       position: relative;
       flex-shrink: 0;
   }
   
   .logo {
       font-size: 1.2rem;
       color: var(--c-white);
       text-shadow: 2px 2px 0 var(--c-border);
   }
   
   .logo-accent { color: var(--c-accent); }
   
   /* --- ハンバーガーメニュー --- */
   #hamburger-menu {
       display: block;
       width: 38px;
       height: 24px;
       cursor: pointer;
       position: relative;
       z-index: 101;
       background: none;
       border: none;
   }
   #hamburger-menu span {
       display: block;
       position: absolute;
       width: 100%;
       height: 3px;
       background-color: var(--c-white);
       border-radius: 4px;
       transition: all 0.4s;
   }
   #hamburger-menu span:nth-of-type(1) { top: 0; }
   #hamburger-menu span:nth-of-type(2) { top: 10px; }
   #hamburger-menu span:nth-of-type(3) { bottom: 0; }
   
   #hamburger-menu.is-active span:nth-of-type(1) { top: 14px; transform: rotate(45deg); }
   #hamburger-menu.is-active span:nth-of-type(2) { opacity: 0; }
   #hamburger-menu.is-active span:nth-of-type(3) { top: 14px; transform: rotate(-45deg); }
   
   #nav-menu {
       display: none;
       position: absolute;
       top: 100%;
       right: 0;
       width: 200px;
       background-color: var(--c-header-bg);
       border-left: 2px solid var(--c-border);
       border-bottom: 2px solid var(--c-border);
       z-index: 100;
   }
   #nav-menu.is-active { display: block; }
   
   #nav-menu .header-buttons {
       display: flex;
       flex-direction: column;
   }
   #nav-menu .header-button {
       width: 100%;
       border-radius: 0;
       border-top: none;
       border-left: none;
       border-right: none;
       padding: 0.8rem;
       text-align: left;
       background-color: var(--c-border);
       color: var(--c-white);
       border-bottom: 2px solid var(--c-black);
       font-size: 1rem;
   }
   #nav-menu .header-button:last-child {
       border-bottom: none;
   }
   
   
   /* ==========================================================================
      3. 各画面スタイル
      ========================================================================== */
   .selection-title {
       font-size: 0.8rem;
       text-align: center;
       margin-bottom: 1.2rem
   }

   .selection-title-bottom {
        font-size: 0.8rem;
        text-align: center;
        margin-top: 1.2rem;
   }

   .mode-selection-container {
       display: flex;
       flex-direction: column;
       gap: 1.5rem;
       align-items: center;
   }
   .mode-button {
       border: 4px solid var(--c-border);
       border-radius: 8px;
       box-shadow: 4px 4px 0 var(--c-border);
       color: var(--c-white);
       padding: 1.2rem;
       width: 90%;
       max-width: 400px;
       cursor: pointer;
       position: relative;
       text-shadow: 2px 2px 0px var(--c-black-op20);
   }
   .mode-button:active {
       transform: translate(4px, 4px);
       box-shadow: none;
   }
   .mode-button h3 { font-size: 1.2rem; }
   .score-button { background-color: var(--c-btn-score); }
   .classic-button { background-color: var(--c-btn-classic); }
   .stats-button { background-color: var(--c-btn-stats); }
   .info-button {
       position: absolute;
       top: 8px; right: 8px;
       width: 24px; height: 24px;
       border-radius: 50%;
       border: 2px solid var(--c-white);
       background-color: rgba(0,0,0,0.3);
       color: var(--c-white);
       display: flex;
       justify-content: center;
       align-items: center;
       font-size: 1rem;
       font-weight: bold;
   }
   
   /* --- ゲーム画面 --- */
   #game-container {
        display: flex;
        flex-direction: column;
        flex-grow: 1;
        height: 100%; /* 高さを100%に指定して子要素のflex-growを有効にする */
    }

    #game-header-area {
        flex-shrink: 0; /* 上のエリアが縮まないようにする */
        padding-top: 0.5rem; /* 元々あった上部の余白を再現 */
    }

   #game-status {
        display: flex;
        font-size: 0.8rem;
        justify-content: space-around;
        margin: 0.5rem 0 0.5rem 0;
    }
   #game-controls {
        position: relative;
    }

   #game-title {
        text-align: center;
        font-size: 1rem;
    }

   #input-area {
        display: flex;
        gap: 0.5rem;
        margin-top: 0.5rem;
    }
   #guess-input, .guess-button {
       padding: 0.6rem;
       border-radius: 4px;
   }
   #guess-input {
       border: 2px solid var(--c-border);
       font-size: 1rem;
       width: 100%;
   }
   .guess-button {
       background-color: var(--c-btn-guess);
       color: var(--c-white);
       border: 2px solid var(--c-border);
       font-size: 0.7rem;
       box-shadow: inset -2px -2px 0px var(--c-black-op50);
       flex-shrink: 0;
   }
   .guess-button:active {
       transform: translate(2px, 2px);
       box-shadow: none;
   }
   .action-buttons { margin-top: 0.7rem; }
   .action-button, .back-button {
       width: 100%;
       padding: 0.8rem;
       font-size: 1rem;
       border-radius: 4px;
       border: 2px solid var(--c-border);
       margin-bottom: 0.5rem;
   }
   
   #suggestions-box {
       position: absolute;
       top: 100%;
       left: 0;
       background-color: var(--c-white);
       border: 1.5px solid var(--c-border);
       border-radius: 7.5px;
       z-index: 10;
       max-height: 200px;
       overflow-y: auto;
   }
   .suggestion-item {
       display: flex;
       align-items: center;
       padding: 8px 12px;
       cursor: pointer;
       border-bottom: 1px solid #ccc;
   }
   .suggestion-item:last-child { border-bottom: none; }
   .suggestion-item:hover { background-color: #eee; }
   .suggestion-sprite { width: 32px; height: 32px; margin-right: 8px; image-rendering: pixelated; }
   
   #message-area {
        min-height: 1.5em;
        text-align: center;
        font-size: 0.7rem;
        font-weight: bold;
    }
    
   
   /* ==========================================================================
      4. 結果表示 (カード型レイアウト)
      ========================================================================== */
    #results-area {
        margin-top: 0.2rem;
        background: var(--c-black-op10);
        border-radius: 4px;
        padding: 0.5rem;
        flex-grow: 1;
        min-height: 0; /* flexアイテムのオーバーフローを防ぐおまじない */
        overflow-y: auto; /* 縦方向に内容が溢れたらスクロールバーを表示 */
    }
    

    .result-row {
        background-color: rgba(255,255,255,0.7);
        border-radius: 8px;
        margin-bottom: 1rem;
        padding: 0.6rem 0.7rem;
        border: 1px solid var(--c-black-op10);
    }

    /* --- ヘッダーのスタイル --- */
    .result-header {
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 0.8rem;
        padding-bottom: 0.6rem;
        margin-bottom: 0.8rem;
        border-bottom: 2px dashed var(--c-black-op20);
    }

    .result-name {
        text-align: center;
    }

    .result-sprite {
        width: 48px;
        height: 48px;
        image-rendering: pixelated;
        flex-shrink: 0;
    }
    .result-name {
        font-size: 1rem;
        font-weight: bold;
        line-height: 0.9;
    }
    .form-name {
        font-size: 0.5rem;
        font-weight: normal;
        opacity: 0.9;
    }

    /* --- ボディ部分のスタイル (Gridレイアウト) --- */
    .result-body {
        display: grid;
        grid-template-columns: 1fr 1fr; /* 2つの均等な列を作成 */
        gap: 0.5rem 0.5rem; /* 行と列の間隔 */
    }

    /* ボディ内の各要素のスタイル */
    .result-body > div {
        padding: 0.4rem 0.5rem;
        font-size: 0.8rem;
        font-weight: bold;
        border-radius: 5px;
        display: flex;
        /* ▼▼▼ ここから変更 ▼▼▼ */
        flex-direction: column; /* 要素を縦に並べる */
        align-items: center;    /* 水平方向の中央揃え */
        justify-content: center;/* 垂直方向の中央揃え */
        /* ▲▲▲ ここまで変更 ▲▲▲ */
        min-height: 48px; /* 高さを少し確保 */
        word-break: break-all;
        text-align: center; /* 値が複数行になった場合も中央揃えに */
    }

    /* ボディ内の各要素の「項目名」スタイル */
    .result-body > div::before {
        opacity: 0.7;
        flex-shrink: 0;
        font-size: 0.55rem; /* 項目名のフォントサイズを小さく */
        margin-bottom: 0.15em; /* 項目名と値の間の余白 */
    }


    /* --- 項目名の設定 --- */
    /* クラシックモード */
    .result-row-classic .result-body > div:nth-child(1)::before { content: "世代"; } /* コロンを削除してスッキリさせる */
    .result-row-classic .result-body > div:nth-child(2)::before { content: "合計種族値"; }
    .result-row-classic .result-body > div:nth-child(3)::before { content: "タイプ1"; }
    .result-row-classic .result-body > div:nth-child(4)::before { content: "タイプ2"; }
    .result-row-classic .result-body > div:nth-child(5)::before { content: "特性1"; }
    .result-row-classic .result-body > div:nth-child(6)::before { content: "特性2"; }
    .result-row-classic .result-body > div:nth-child(7)::before { content: "夢特性"; }
    .result-row-classic .result-body > div:nth-child(8)::before { content: "性別比"; }
    .result-row-classic .result-body > div:nth-child(9)::before { content: "高さ"; }
    .result-row-classic .result-body > div:nth-child(10)::before { content: "重さ"; }
    .result-row-classic .result-body > div:nth-child(11)::before { content: "タマゴ1"; }
    .result-row-classic .result-body > div:nth-child(12)::before { content: "タマゴ2"; }
    .result-row-classic .result-body > div:nth-child(13)::before { content: "進化数"; }
    .result-row-classic .result-body > div:nth-child(14)::before { content: "FC"; }

    /* 種族値モード */
    .result-row-stats .result-body > div:nth-child(1)::before { content: "HP"; }
    .result-row-stats .result-body > div:nth-child(2)::before { content: "こうげき"; }
    .result-row-stats .result-body > div:nth-child(3)::before { content: "ぼうぎょ"; }
    .result-row-stats .result-body > div:nth-child(4)::before { content: "とくこう"; }
    .result-row-stats .result-body > div:nth-child(5)::before { content: "とくぼう"; }
    .result-row-stats .result-body > div:nth-child(6)::before { content: "すばやさ"; }


    /* --- 色分けのスタイル --- */
    .bg-green { background-color: var(--c-correct); color: var(--c-white); }
    .bg-yellow { background-color: var(--c-partial); color: var(--c-text); }
    .bg-gray { background-color: var(--c-wrong); color: var(--c-white); }
    .text-red { color: var(--c-arrow-up-red); font-weight: bold; }
    .text-blue { color: var(--c-arrow-down-blue); font-weight: bold; }
   
   /* ==========================================================================
      5. モーダル (縦積みレイアウト)
      ========================================================================== */
   #modal-overlay, #result-modal-overlay, #final-score-modal-overlay {
       position: fixed;
       top: 0; left: 0;
       width: 100%; height: 100%;
       background-color: rgba(0,0,0,0.7);
       z-index: 200;
       display: flex;
       justify-content: center;
       align-items: center;
       padding: 1rem;
   }
   #modal, #result-modal, #final-score-modal {
       background: #37474f;
       color: #fff;
       padding: 1.5rem 1rem;
       border-radius: 8px;
       border: 2px solid #ccc;
       width: 100%;
       max-width: 500px;
       max-height: 90vh;
       overflow-y: auto;
       position: relative;
   }
   #modal-close-button {
       position: absolute;
       top: 0.5rem; right: 0.5rem;
       font-size: 1.2rem;
       color: #fff;
       background: none; border: none; cursor: pointer;
   }
   
   #result-modal-verdict, #final-score-modal-verdict { font-size: 2rem; text-align: center; margin-bottom: 1rem; }
   .profile-header {
       display: flex;
       flex-direction: column;
       align-items: center;
       gap: 0.5rem;
       padding-bottom: 1rem;
       border-bottom: 1px solid #555;
       margin-bottom: 1rem;
   }
   .sprite-container {
       width: 96px; height: 96px; background-color: rgba(255,255,255,0.1); border-radius: 50%;
       display: flex; align-items: center; justify-content: center;
   }
   .sprite-container img { width: 96px; height: 96px; image-rendering: pixelated; }
   .pokemon-name-display { text-align: center; font-size: 1.5rem; }
   .verdict-prefix, .verdict-suffix { font-size: 1rem; opacity: 0.8; }
   
   .profile-content-wrapper, .final-score-content-wrapper { display: flex; flex-direction: column; gap: 1.5rem; }
   .profile-left { display: grid; grid-template-columns: auto 1fr; gap: 0.5rem 1rem; }
   .grid-label { font-weight: bold; opacity: 0.8; text-align: right; }
   .profile-right dt { font-weight: bold; opacity: 0.8; }
   .stats-list { display: grid; grid-template-columns: auto 1fr auto; gap: 0.4rem 0.6rem; align-items: center; }
   .stats-list dd { display: flex; align-items: center; gap: 0.5rem; }
   .stat-bar-bg { flex-grow: 1; background-color: rgba(0,0,0,0.2); border-radius: 4px; height: 0.8rem; }
   .stat-bar { height: 100%; border-radius: 4px; background-color: #4A90E2; }
   .stats-list span { width: 3ch; text-align: right; }
   
   .result-modal-buttons {
       display: flex;
       flex-direction: column;
       gap: 1rem;
       margin-top: 2rem;
       align-items: center;
   }
   #result-modal-left-button, #result-modal-right-button,
   #final-score-modal-left-button, #final-score-modal-right-button {
       width: 90%;
       padding: 1rem;
       font-size: 1rem;
       font-weight: bold;
       border: 4px solid var(--c-border);
       border-radius: 8px;
       box-shadow: 2px 2px 0 var(--c-border);
       color: var(--c-white);
       cursor: pointer;
   }
   #result-modal-left-button, #final-score-modal-left-button { background-color: #53a2d0; }
   #result-modal-right-button, #final-score-modal-right-button { background-color: #64b46c; }
   
   #final-score-modal .final-score-content-wrapper { gap: 1rem; }
   #final-score-modal .score-profile-column { background-color: rgba(0,0,0,0.2); border-radius: 8px; padding: 1rem; }
   
   .hidden { display: none !important; }
   
   
